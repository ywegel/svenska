<?xml version="1.0" ?>
<SmellBaseline>
    <ManuallySuppressedIssues />
    <CurrentIssues>
        <ID>LongMethod:OverviewScreen.kt$@Composable private fun OverviewScreen( uiState: OverviewUiState, containerName: String, navigateToAdd: () -&gt; Unit, onQuizClick: () -&gt; Unit, navigateToEdit: (vocabulary: Vocabulary) -&gt; Unit, navigateToSearch: () -&gt; Unit, navigateUp: () -&gt; Unit, onVocabularyClick: (Vocabulary) -&gt; Unit, onDismissDetail: () -&gt; Unit, navigateToWordGroupScreen: () -&gt; Unit, )</ID>
        <ID>LongParameterList:ContainerScreen.kt$( uiState: ContainerUiState, onContainerClick: (VocabularyContainer) -&gt; Unit = {}, toggleIsEditMode: (Boolean) -&gt; Unit = {}, onDeleteClick: (VocabularyContainer) -&gt; Unit = {}, onAddContainer: (String) -&gt; Unit = {}, onBonusClick: (BonusScreen) -&gt; Unit = {}, onSettingsClicked: () -&gt; Unit = {}, onSearchClicked: () -&gt; Unit = {}, )</ID>
        <ID>LongParameterList:FavoritesAndPronunciationScreen.kt$( items: List&lt;Vocabulary&gt;, detailViewState: VocabularyDetailState, screenType: BonusScreen, showExplanation: Boolean, padding: PaddingValues, scrollBehavior: TopAppBarScrollBehavior, toggleExplanation: () -&gt; Unit, onVocabularyClick: (Vocabulary) -&gt; Unit, onDismissDetail: () -&gt; Unit, navigateToEdit: (vocabulary: Vocabulary) -&gt; Unit, navigateToWordGroupScreen: () -&gt; Unit, )</ID>
        <ID>LongParameterList:FavoritesAndPronunciationScreen.kt$( uiState: FavoritesUiState, screenType: BonusScreen, initialShowExplanation: Boolean = false, navigateUp: () -&gt; Unit, onVocabularyClick: (Vocabulary) -&gt; Unit, onDismissDetail: () -&gt; Unit, navigateToEdit: (vocabulary: Vocabulary) -&gt; Unit, navigateToWordGroupScreen: () -&gt; Unit, )</ID>
        <ID>LongParameterList:OverviewScreen.kt$( uiState: OverviewUiState, containerName: String, navigateToAdd: () -&gt; Unit, onQuizClick: () -&gt; Unit, navigateToEdit: (vocabulary: Vocabulary) -&gt; Unit, navigateToSearch: () -&gt; Unit, navigateUp: () -&gt; Unit, onVocabularyClick: (Vocabulary) -&gt; Unit, onDismissDetail: () -&gt; Unit, navigateToWordGroupScreen: () -&gt; Unit, )</ID>
        <ID>LongParameterList:QuizContent.kt$( innerPadding: PaddingValues, renderer: QuizRenderer&lt;A, State, Actions, AnswerResult&gt;, currentQuestion: QuizQuestion&lt;A&gt;, state: State, actions: Actions, userAnswer: A?, userAnswerCorrect: AnswerResult?, callbacks: QuizCallbacks&lt;A&gt;, )</ID>
        <ID>LongParameterList:QuizScreen.kt$( uiState: QuizUiState&lt;A, AnswerResult&gt;, renderer: QuizRenderer&lt;A, State, Actions, AnswerResult&gt;, state: State, actions: Actions, callbacks: QuizCallbacks&lt;A&gt;, navigateToWordGroupsScreen: () -&gt; Unit, navigateToOverview: () -&gt; Unit, onStartNewQuiz: () -&gt; Unit, )</ID>
        <ID>LongParameterList:SearchScreen.kt$( uiState: SearchUiState, vocabulary: List&lt;Vocabulary&gt;, currentSearchQuery: String, onSearchChanged: (String) -&gt; Unit, onSearch: (String) -&gt; Unit, navigateUp: () -&gt; Unit, onVocabularyClick: (Vocabulary) -&gt; Unit, onDismissDetail: () -&gt; Unit, navigateToEdit: (vocabulary: Vocabulary) -&gt; Unit, navigateToWordGroupScreen: () -&gt; Unit, )</ID>
        <ID>LongParameterList:Vocabulary.kt$Vocabulary.Companion$( wordWithHighlights: String, translation: String, gender: Gender?, wordGroup: WordGroup, ending: String, notes: String, containerId: Int, lastEdited: Long = System.currentTimeMillis(), created: Long = System.currentTimeMillis(), )</ID>
    </CurrentIssues>
</SmellBaseline>
